C51 COMPILER V9.51   OTHER                                                                 08/28/2014 15:02:20 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OTHER
OBJECT MODULE PLACED IN .\Other.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Other.c BROWSE INCDIR(..\Library) DEBUG OBJE
                    -CTEXTEND PRINT(.\Other.lst) OBJECT(.\Other.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Other.c (v1.00)
   3                  
   4                  其他程序
   5          ---------------------------------------------------*/
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Other.h"
  11          #include "Delay.h"
  12          #include "communication.h"
  13          
  14          /*------- Public variable declarations --------------------------*/
  15          extern bit position_sensor_EN;                  
  16          extern bit fell_flag;                                           
  17          extern bit raised_flag;                                 
  18          extern tByte sensor_trigger_count;      
  19          extern tByte sensor_1ststage_count;     
  20          extern tWord sensor_3rdstage_time;                      
  21          extern tByte sensor_3rdstage_effcount;          
  22          extern tByte sensor_3rdstage_count;                     
  23          extern tWord sensor_3rdstage_interval;          
  24          extern tWord sensor_2ndstage_time;              
  25          extern tByte sensor_2ndstage_count;             
  26          extern bit stolen_alarm_flag;                                   
  27          extern bit host_stolen_alarm1_EN;      
  28          extern bit host_stolen_alarm2_EN;     
  29          extern tByte host_stolen_alarm1_count;          
  30          extern tByte host_stolen_alarm2_count;  
  31          extern bit raised_fell_flag;                                    
  32          extern bit wire_broken_flag;                    
  33          extern tByte wire_broken_count;         
  34          extern bit battery_stolen_EN;                   
  35          extern tByte battery_stolen_count;      
  36          extern bit sensor_EN;
  37          extern tByte enable_sensor_delay_count;         
  38          extern bit enable_sensor_delayEN;
  39          extern bit Auto_Mode;
  40          /*-------------------------------------------------------
  41                  magnet_CW()
  42                  电磁铁正转，顺时针，将锁打开，
  43          --------------------------------------------------------*/
  44          void magnet_CW(void)
  45                  {
  46   1              // 发送开锁密码
  47   1              send_code_to_lock();
  48   1              
  49   1              MagentControl_1 = 0;
  50   1              MagentControl_2 = 1;
  51   1              Magnet_Delay(4000, 10000);
  52   1              MagentControl_1 = 1;
  53   1              MagentControl_2 = 1;
  54   1              motor_lock = 0;
C51 COMPILER V9.51   OTHER                                                                 08/28/2014 15:02:20 PAGE 2   

  55   1              }
  56          
  57          /*-------------------------------------------------------
  58                  magnet_CW_Z4()
  59                  电磁铁正转，顺时针，将锁打开，
  60          --------------------------------------------------------*/
  61          void magnet_CW_Z4(void)
  62                  {
  63   1              // 发送开锁密码
  64   1              send_code_to_lock_Z4();
  65   1              
  66   1              MagentControl_1 = 0;
  67   1              MagentControl_2 = 1;
  68   1              Magnet_Delay(2000, 8000);
  69   1              MagentControl_1 = 1;
  70   1              MagentControl_2 = 1;
  71   1              motor_lock = 0;
  72   1              }
  73          
  74          /*-------------------------------------------------------
  75                  magnet_CW_Z4_ManualMode()
  76                  电磁铁正转，顺时针，将锁打开，
  77          --------------------------------------------------------*/
  78          void magnet_CW_Z4_ManualMode(void)
  79                  {
  80   1              // 发送开锁密码
  81   1              send_code_to_lock_Z4();
  82   1              
  83   1              MagentControl_1 = 0;
  84   1              MagentControl_2 = 1;
  85   1              Magnet_Delay(2000, 16000);
  86   1              MagentControl_1 = 1;
  87   1              MagentControl_2 = 1;
  88   1              motor_lock = 0;
  89   1              }
  90          
  91          /*-------------------------------------------------------
  92                  magnet_CW_Z4T0()
  93                  电磁铁正转，顺时针，将锁打开，
  94          --------------------------------------------------------*/
  95          void magnet_CW_Z4T0(void)
  96                  {
  97   1              // 发送开锁密码
  98   1              send_code_to_lock_Z4T0();
  99   1              
 100   1              MagentControl_1 = 0;
 101   1              MagentControl_2 = 1;
 102   1              Magnet_Delay(2000, 8000);
 103   1              MagentControl_1 = 1;
 104   1              MagentControl_2 = 1;
 105   1              motor_lock = 0;
 106   1              }
 107          /*-------------------------------------------------------
 108                  magnet_CW_Z4T1()
 109                  电磁铁正转，顺时针，将锁打开，
 110          --------------------------------------------------------*/
 111          void magnet_CW_Z4T1(void)
 112                  {
 113   1              // 发送开锁密码
 114   1              send_code_to_lock_Z4T1();
 115   1              
 116   1              MagentControl_1 = 0;
C51 COMPILER V9.51   OTHER                                                                 08/28/2014 15:02:20 PAGE 3   

 117   1              MagentControl_2 = 1;
 118   1              Magnet_Delay(2000, 9500);
 119   1              MagentControl_1 = 1;
 120   1              MagentControl_2 = 1;
 121   1              motor_lock = 0;
 122   1              }
 123          
 124          /*-------------------------------------------------------
 125                  magnet_CW_for_Unlock()
 126                  用于DDC-K，电磁铁正转，顺时针，将锁打开
 127          --------------------------------------------------------*/
 128          void magnet_CW_for_Unlock(void)
 129                  {
 130   1              send_code_to_lock_for_Unlock();
 131   1              
 132   1              MagentControl_1 = 1;
 133   1              MagentControl_2 = 0;
 134   1              Magnet_Delay(0, 14000);
 135   1              MagentControl_1 = 1;
 136   1              MagentControl_2 = 1;
 137   1              motor_lock = 0;
 138   1              }
 139          
 140          /*-------------------------------------------------------
 141                  magnet_ACW()
 142                  电磁铁反转，逆时针，将锁关闭
 143          --------------------------------------------------------*/
 144          void magnet_ACW(void)
 145                  {
 146   1              motor_lock = 1;
 147   1              MagentControl_1 = 1;
 148   1              MagentControl_2 = 0;
 149   1              Magnet_Delay(5000, 13000);
 150   1              MagentControl_1 = 1;
 151   1              MagentControl_2 = 1;
 152   1              }
 153          
 154          /*-------------------------------------------------------
 155                  magnet_ACW_ManualMode()
 156                  电磁铁反转，逆时针，将锁关闭
 157          --------------------------------------------------------*/
 158          void magnet_ACW_ManualMode(void)
 159                  {
 160   1              motor_lock = 1;
 161   1              MagentControl_1 = 1;
 162   1              MagentControl_2 = 0;
 163   1              Magnet_Delay(5000, 20000);
 164   1              MagentControl_1 = 1;
 165   1              MagentControl_2 = 1;
 166   1              }
 167                  
 168          /*----------------------------------------------------
 169                  disable_sensor()
 170                  打开振动传感器和三轴传感器，并将其复位
 171          ----------------------------------------------------*/
 172          void disable_sensor(void)
 173                  {
 174   1              // disable position sensor(vertical and horizontal) and vibration sensor
 175   1              position_sensor_EN = 0; 
 176   1              sensor_EN = 0;
 177   1              // reset all the flag in sensor
 178   1              fell_flag=0;  
C51 COMPILER V9.51   OTHER                                                                 08/28/2014 15:02:20 PAGE 4   

 179   1              raised_flag=0;
 180   1              sensor_trigger_count = 0;
 181   1              sensor_1ststage_count = 0;
 182   1              sensor_2ndstage_count = 0;
 183   1              sensor_2ndstage_time = 0;
 184   1              sensor_3rdstage_time = 0;
 185   1              sensor_3rdstage_interval = 0;
 186   1              sensor_3rdstage_count = 0;
 187   1              sensor_3rdstage_effcount = 0;
 188   1              stolen_alarm_flag = 0;
 189   1              host_stolen_alarm1_EN = 0;
 190   1              host_stolen_alarm1_count = 0;
 191   1              host_stolen_alarm2_EN = 0;
 192   1              host_stolen_alarm2_count = 0;
 193   1              
 194   1              raised_fell_flag = 0;
 195   1              
 196   1              // reset the wire broken count
 197   1              wire_broken_count = 0;
 198   1              wire_broken_flag = 0;
 199   1              
 200   1              if(Auto_Mode == 1)
 201   1                      {
 202   2                      // reset battery stolen
 203   2                      battery_stolen_EN = 0;
 204   2                      battery_stolen_count = 0;       
 205   2                      }
 206   1              }
 207                  
 208          /*--------------------------------------------------------
 209                  enable_sensor()
 210                  打开传感器，使其检测振动
 211          ---------------------------------------------------------*/
 212          void enable_sensor(void)
 213                  {
 214   1              // enable position sensor(vertical and horizontal) and vibration sensor
 215   1              position_sensor_EN = 1; 
 216   1              sensor_EN = 1;
 217   1              // reset relatively sensor count
 218   1              sensor_trigger_count = 0;
 219   1              sensor_1ststage_count = 0;      
 220   1              enable_sensor_delayEN = 0;
 221   1              enable_sensor_delay_count = 0;  
 222   1              }
 223          
 224          /*----------------------------------------------------------------
 225                  Moto_Vibration()
 226                  用于附机，马达振动
 227          -----------------------------------------------------------------*/
 228          void Moto_Vibration(void)
 229                  {
 230   1              Moto_EN=0;                              
 231   1              Delay(10);
 232   1              Moto_EN=1;
 233   1              }
 234                  
 235          /*---------------------------------------------------
 236                  end of file
 237          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.51   OTHER                                                                 08/28/2014 15:02:20 PAGE 5   

   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
