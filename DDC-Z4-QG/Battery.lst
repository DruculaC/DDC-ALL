C51 COMPILER V9.51   BATTERY                                                               10/27/2014 10:29:42 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE BATTERY
OBJECT MODULE PLACED IN .\Battery.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE ..\Library\Battery.c BROWSE INCDIR(..\Library) DEBUG OB
                    -JECTEXTEND PRINT(.\Battery.lst) OBJECT(.\Battery.obj)

line level    source

   1          /*---------------------------------------------------
   2                  Battery.c (v1.00)
   3                  
   4                  µç³ØµçÁ¿ÅÐ¶Ï
   5          ---------------------------------------------------*/   
   6          
   7          #include "main.h"
   8          #include "port.h"
   9          
  10          #include "Battery.h"
  11          #include "voice.h"
  12          #include "Delay.h"
  13          
  14          
  15          /*----------------------------------------------------
  16                  verifybattery()
  17                  voice alarm for battery status without power module
  18          void verifybattery(tWord Check2)
  19                  {       
  20                  // battery is sufficient, battery > 50.6V, 2.5V/5.14V
  21                  if((Check2 >= 0x1f2))
  22                          {
  23                          voice_EN = 1;
  24                          SC_Speech(28);          
  25                          Delay(60);
  26                          voice_EN = 0;
  27                          }
  28             // 20km, 49.1V < battery < 50.6V, 2.43V/5.14V
  29                  else if((Check2 < 0x1f2)&&(Check2 >= 0x1e5))            
  30                          {
  31                          voice_EN = 1;
  32                          SC_Speech(10);  
  33                          Delay(100);
  34                          voice_EN = 0;
  35                          }
  36                  // 15km, 47.4V < battery < 49.1V, 2.35V/5.12V 
  37                  else if((Check2 < 0x1e5)&&(Check2 >= 0x1d6))            
  38                          {
  39                          voice_EN = 1;
  40                          SC_Speech(9);   
  41                          Delay(100);
  42                          voice_EN = 0;
  43                          }
  44                  // 10km, 45.6V < battery <47.4V, 2.26V/5.12V
  45                  else if((Check2 < 0x1d6)&&(Check2 >= 0x1c4))            
  46                          {
  47                          voice_EN = 1;
  48                          SC_Speech(8);   
  49                          Delay(100);
  50                          voice_EN = 0;
  51                          }
  52                  // 5km, 44.3V < battery < 45.7V, 2.17V/5.11V
  53                  else if((Check2 < 0x1c4)&&(Check2 >= 0x1b2))            
  54                          {
C51 COMPILER V9.51   BATTERY                                                               10/27/2014 10:29:42 PAGE 2   

  55                          voice_EN =1;
  56                          SC_Speech(7);   
  57                          Delay(100);
  58                          voice_EN = 0;
  59                          }                     
  60                  // battery is low, battery < 44.3V, 
  61                  else if(Check2 < 0x1b2)
  62                          {
  63                          motorBAT_low_speech();
  64                          }
  65                  }
  66          -----------------------------------------------------*/
  67          
  68          /*----------------------------------------------------
  69                  verifybattery()
  70                  voice alarm for battery status with power module
  71          -----------------------------------------------------*/
  72          
  73          void verifybattery(tWord Check2)
  74                  {       
  75   1              // battery is sufficient, battery > 50.4V, 2.48V/5V
  76   1              if((Check2 >= 0x1fb))
  77   1                      {
  78   2                      voice_EN = 1;
  79   2                      SC_Speech(28);          
  80   2                      Delay(60);
  81   2                      voice_EN = 0;
  82   2                      }
  83   1         // 20km, 49V < battery < 50.4V, 2.42V/5V
  84   1              else if((Check2 < 0x1fb)&&(Check2 >= 0x1ef))            
  85   1                      {
  86   2                      voice_EN = 1;
  87   2                      SC_Speech(10);  
  88   2                      Delay(100);
  89   2                      voice_EN = 0;
  90   2                      }
  91   1              // 15km, 47.8V < battery < 49V, 2.36V/5V 
  92   1              else if((Check2 < 0x1ef)&&(Check2 >= 0x1e3))            
  93   1                      {
  94   2                      voice_EN = 1;
  95   2                      SC_Speech(9);   
  96   2                      Delay(100);
  97   2                      voice_EN = 0;
  98   2                      }
  99   1              // 10km, 46.5V < battery <47.8V, 2.3V/5V
 100   1              else if((Check2 < 0x1e3)&&(Check2 >= 0x1d7))            
 101   1                      {
 102   2                      voice_EN = 1;
 103   2                      SC_Speech(8);   
 104   2                      Delay(100);
 105   2                      voice_EN = 0;
 106   2                      }
 107   1              // 5km, 45.1V < battery < 46.5V, 2.86V/4.93V
 108   1              else if((Check2 < 0x1d7)&&(Check2 >= 0x1c9))            
 109   1                      {
 110   2                      voice_EN =1;
 111   2                      SC_Speech(7);   
 112   2                      Delay(100);
 113   2                      voice_EN = 0;
 114   2                      }                     
 115   1              // battery is low, battery < 45.1V, 
 116   1              else if(Check2 < 0x1c9)
C51 COMPILER V9.51   BATTERY                                                               10/27/2014 10:29:42 PAGE 3   

 117   1                      {
 118   2                      motorBAT_low_speech();
 119   2                      }
 120   1              }
 121          /*---------------------------------------------------
 122                  end of file
 123          ----------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
